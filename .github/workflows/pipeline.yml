name: CI

on:
  push:
    branches:
      - master

jobs:
  simple_deployment_pipeline_backend:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [ 14.x, 16.x ]
        mongodb-version: [ '5.0' ]

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: npm install
        run: npm install

      - name: lint
        run: npm run lint

      - name: tests
        run: npm run test -- --coverage
        env:
          SECRET: secretForTESTING

      - name: codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./backend/coverage/coverage-final.json
          flags: backend

  simple_deployment_pipeline_frontend:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [16.x]
        mongodb-version: [ '5.0' ]

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: npm install
        run: npm install

      - name: lint
        run: npm run lint

      - name: tests
        run: npm run test -- --coverage

      - name: codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./frontend/coverage/coverage-final.json
          flags: frontend

      - name: install backend
        run: npm run install-backend-CI

      - name: start backend
        run: npm run start-backend &
        env:
          PORT: 3001
          SECRET: secretForTESTING

      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm start
          wait-on: 'http://localhost:3000'
          working-directory: ./frontend
  deploy_to_heroku:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "musicapp_react"
          heroku_email: "pekka.prepula@gmail.com"
          healthcheck: 'https://musicapp-react.herokuapp.com/api/health'